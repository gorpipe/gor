/*
 *  BEGIN_COPYRIGHT
 *
 *  Copyright (C) 2011-2013 deCODE genetics Inc.
 *  Copyright (C) 2013-2019 WuXi NextCode Inc.
 *  All Rights Reserved.
 *
 *  GORpipe is free software: you can redistribute it and/or modify
 *  it under the terms of the AFFERO GNU General Public License as published by
 *  the Free Software Foundation.
 *
 *  GORpipe is distributed "AS-IS" AND WITHOUT ANY WARRANTY OF ANY KIND,
 *  INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
 *  NON-INFRINGEMENT, OR FITNESS FOR A PARTICULAR PURPOSE. See
 *  the AFFERO GNU General Public License for the complete license terms.
 *
 *  You should have received a copy of the AFFERO GNU General Public License
 *  along with GORpipe.  If not, see <http://www.gnu.org/licenses/agpl-3.0.html>
 *
 *  END_COPYRIGHT
 */

import com.nextcode.gradle.*

plugins {
    id "gor.java-library"
    id 'com.gradleup.shadow'
}

// Use shadow jar to create jar with the content of the module and its 'internal' dependencies.  If the module
// as no 'internal' dependenceis this will behave just like normal jar task.    Note, only the internal top level
// dependencies are included, but none of external/standard dependencies.

configurations.internal.transitive = false // Internal are not transitive, but deps are added as dependencies.

shadowJar {
    manifest manifestTemplate
    archiveBaseName = getProjectFullName()
    archiveClassifier = ''
    mergeServiceFiles()
    configurations = [project.configurations.internal]    // Only collect internals.
}

// Replace std jar with shadowJar.
assemble.dependsOn(shadowJar)
jar {
    enabled = false
    dependsOn(shadowJar)
}
// Workaround for check input publish plugin, replace jar with shadowJar.
configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf {
            it.buildDependencies.getDependencies(null).contains(jar)
        }
        it.outgoing.artifact(shadowJar)

    }
}

